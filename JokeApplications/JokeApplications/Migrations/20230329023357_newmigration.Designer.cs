// <auto-generated />
using System;
using JokeApplications.API.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JokeApplications.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20230329023357_newmigration")]
    partial class newmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("JokeApplications.API.Models.Auther", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Auther");

                    b.HasData(
                        new
                        {
                            Id = 350,
                            Name = "Ruchikesh"
                        },
                        new
                        {
                            Id = 351,
                            Name = "Suresh"
                        },
                        new
                        {
                            Id = 352,
                            Name = "Ramesh"
                        });
                });

            modelBuilder.Entity("JokeApplications.API.Models.Joke", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Approved")
                        .HasColumnType("bit");

                    b.Property<int>("AutherId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("NSFW")
                        .HasColumnType("bit");

                    b.Property<string>("PunchLine")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SetUp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShareableLink")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AutherId");

                    b.ToTable("Jokes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Approved = true,
                            AutherId = 350,
                            Date = new DateTime(2023, 3, 29, 8, 3, 57, 128, DateTimeKind.Local).AddTicks(7023),
                            NSFW = false,
                            PunchLine = "What is often characterized as a very conservative organization has taken a stance against racism. I'm not surprised at all though. To anyone who's been paying attention, from its very beginnings, NASCAR has always been veering to the left.",
                            SetUp = "A lot of people are shocked by the recent events in NASCAR.",
                            ShareableLink = "https://dotnetmasterruch.blob.core.windows.net/mango/13.jpg",
                            Type = "Normal"
                        },
                        new
                        {
                            Id = 2,
                            Approved = true,
                            AutherId = 351,
                            Date = new DateTime(2023, 3, 29, 8, 3, 57, 128, DateTimeKind.Local).AddTicks(7065),
                            NSFW = true,
                            PunchLine = "I was talking to my physics teacher...",
                            SetUp = "I was talking to my physics teacher...",
                            ShareableLink = "https://dadjokes.io/joke/60dd36169d829533ec301e49",
                            Type = "Normal"
                        },
                        new
                        {
                            Id = 3,
                            Approved = true,
                            AutherId = 352,
                            Date = new DateTime(2023, 3, 29, 8, 3, 57, 128, DateTimeKind.Local).AddTicks(7077),
                            NSFW = false,
                            PunchLine = "You put a little boogie on it.",
                            SetUp = "How do you make a tissue dance?",
                            ShareableLink = "https://dadjokes.io/joke2322/60dd36169d8dfdf29533ec301e49",
                            Type = "High"
                        });
                });

            modelBuilder.Entity("JokeApplications.API.Models.Joke", b =>
                {
                    b.HasOne("JokeApplications.API.Models.Auther", "Auther")
                        .WithMany()
                        .HasForeignKey("AutherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Auther");
                });
#pragma warning restore 612, 618
        }
    }
}
